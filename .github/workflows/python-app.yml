name: Toggl CLI CI/CD 

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  tests:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04]
        python-version: [3.6, 3.7, 3.8, 3.9]
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
      
      - name: Install tgl
        run: python setup.py install
      
      - name: Run help message tests
        run: python tests/help_messages_tests.py
      
      - name: Run all command without setup tests
        run: python tests/all_commands_without_setup_tests.py
      
      - name: Run setup command tests
        run: python tests/setup_command_tests.py
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Run start command tests
        run: python tests/setup_command_tests.py
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Run current command tests
        run: python tests/current_command_tests.py
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Run stop command tests
        run: python tests/stop_command_tests.py
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}

      - name: Run create command tests
        run: python tests/create_command_tests.py
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Run delete command tests
        run: python tests/delete_command_tests.py
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Run pause command tests
        run: python tests/pause_command_tests.py
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Run resume command tests
        run: python tests/resume_command_tests.py
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
